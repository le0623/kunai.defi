services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: kunai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma:/docker-entrypoint-initdb.d
    networks:
      - kunai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:8-alpine
    container_name: kunai-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - kunai-network
    command: redis-server --appendonly yes

  # Backend Development Server
  kunai-backend:
    build:
      context: .
    container_name: kunai-backend
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:${PORT}"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://redis:${REDIS_PORT}
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./ssl:/app/ssl:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - kunai-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "https://kunai-backend:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data:

networks:
  kunai-network:
    driver: bridge
