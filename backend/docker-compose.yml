version: '3.8'

services:
  kunai-backend:
    build: .
    container_name: kunai-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "443:443"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SSL_KEY_PATH=/app/ssl/key.pem
      - SSL_CERT_PATH=/app/ssl/cert.pem
      - CORS_ORIGIN=${CORS_ORIGIN:-https://localhost}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
      - TELEGRAM_WEBAPP_URL=${TELEGRAM_WEBAPP_URL}
    volumes:
      - ./ssl:/app/ssl:ro
      - ./logs:/app/logs
    networks:
      - kunai-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching
  redis:
    image: redis:7-alpine
    container_name: kunai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kunai-network
    command: redis-server --appendonly yes

  # Optional: Add Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: kunai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - kunai-backend
    networks:
      - kunai-network

volumes:
  redis_data:

networks:
  kunai-network:
    driver: bridge 